apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-dev
  namespace: totallylegitco
  labels:
    app: fight-health-insurance-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fight-health-insurance
  template:
    metadata:
      labels:
        app: fight-health-insurance
        group: fight-health-insurance-webbackend-dev
    spec:
      topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: fight-health-insurance-dev
      containers:
        - image: ${FHI_BASE}:${FHI_VERSION}
          name: totallylegitco
          resources:
            requests:
              memory: 32G
              cpu: 2
          envFrom:
          - secretRef:
              name: fight-health-insurance-secret-dev
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: web
          livenessProbe:
            httpGet:
              httpHeaders:
                - name: Host
                  value: "dev.fighthealthinsurance.com"
              path: /
              port: 80
            periodSeconds: 180
          startupProbe:
            httpGet:
              httpHeaders:
                - name: Host
                  value: "dev.fighthealthinsurance.com"
              path: /
              port: 80
            periodSeconds: 10
            failureThreshold: 45
---
apiVersion: v1
kind: Service
metadata:
  labels:
    group: fight-health-insurance
  name: dev-web-svc
  namespace: totallylegitco
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: web
  selector:
    group: fight-health-insurance-webbackend-dev
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fight-health-insurance-staging-ingress
  namespace: totallylegitco
  annotations:
    nginx.org/websocket-services: dev-web-svc
    cert-manager.io/cluster-issuer: letsencrypt
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/renew-before: 360h
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "30000"
    nginx.ingress.kubernetes.io/proxy-body-size: 80m
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - dev.fighthealthinsurance.com
    secretName: combined-tls-secret-dev
  rules:
    - host: dev.fighthealthinsurance.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  dev-web-svc
                port:
                  number: 80
